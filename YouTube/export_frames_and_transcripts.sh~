#!/bin/bash

# === Configurable paths ===
VIDEO_DIR="./frames"                     # Folder with all frames
COLLECTION_FILE="selected-frames.gqv"     # Your saved Geeqie collection
FULL_TRANSCRIPT="glyph-miner.txt"          # The full transcript file
FRAME_MAP="frame_map.txt"                 # Map frame -> subtitle

EXPORT_DIR="exported-frames"
TEXT_DIR="frame-texts"
TEX_OUTPUT="frames.tex"

# === Prepare output directories ===
mkdir -p "$EXPORT_DIR"
mkdir -p "$TEXT_DIR"

# === 1. Export selected frames ===
echo "📂 Copying selected frames..."

while read -r filepath; do
    filename=$(basename "$filepath")
    cp "$filepath" "$EXPORT_DIR/$filename"
done < "$COLLECTION_FILE"

# === 2. Create lookup set of selected frames ===
grep -oP 'frame\d+\.png' "$COLLECTION_FILE" > selected-frames.list

# === 3. Rebuild frame -> subtitle mapping ===
declare -A subtitle_to_frame

while read -r line; do
    frame=$(echo "$line" | awk '{print $1}')
    subtitle_num=$(echo "$line" | grep -o '[0-9]\+$')
    subtitle_to_frame[$subtitle_num]=$frame
done < "$FRAME_MAP"

# === 4. Split transcripts correctly ===
echo "📝 Extracting transcripts..."

current_frame=""

total_subs=$(wc -l < "$FULL_TRANSCRIPT")

for (( i=1; i<=total_subs; i++ )); do
    frame=${subtitle_to_frame[$i]}

    if grep -q "$frame" selected-frames.list; then
        # Start new file for new frame
        current_frame="$frame"
        text=$(sed -n "${i}p" "$FULL_TRANSCRIPT")
        echo "$text" > "$TEXT_DIR/${current_frame%.png}.txt"
    else
        # Append missing subtitles to previous frame
        if [ -n "$current_frame" ]; then
            text=$(sed -n "${i}p" "$FULL_TRANSCRIPT")
            echo "" >> "$TEXT_DIR/${current_frame%.png}.txt"
            echo "$text" >> "$TEXT_DIR/${current_frame%.png}.txt"
        fi
    fi
done

# === 5. Generate LaTeX Beamer slides ===
echo "📄 Creating LaTeX file..."

cat <<EOL > "$TEX_OUTPUT"
\documentclass{beamer}
\usepackage{graphicx}
\usepackage{caption}
\title{Glyph Miner Slides}
\author{}
\date{}
\begin{document}
\frame{\titlepage}
EOL

for frameimg in "$EXPORT_DIR"/*.png; do
    basename=$(basename "$frameimg" .png)
    cat <<EOL >> "$TEX_OUTPUT"

\begin{frame}{$basename}
\includegraphics[width=0.8\textwidth]{$EXPORT_DIR/$basename.png}
\caption*{\input{$TEXT_DIR/$basename.txt}}
\end{frame}

EOL
done

echo '\end{document}' >> "$TEX_OUTPUT"

echo "✅ All done! Generated LaTeX Beamer file: $TEX_OUTPUT"
echo "👉 Compile it with: pdflatex $TEX_OUTPUT"
